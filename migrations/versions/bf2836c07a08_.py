"""empty message

Revision ID: bf2836c07a08
Revises: 112532074cdf
Create Date: 2024-11-18 14:58:01.442977

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bf2836c07a08'
down_revision = '112532074cdf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('track',
    sa.Column('track_id', sa.Integer(), nullable=False),
    sa.Column('spotify_id', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('track_id')
    )
    with op.batch_alter_table('track', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_track_spotify_id'), ['spotify_id'], unique=True)

    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('bio', sa.String(length=1000), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('follow',
    sa.Column('follow_id', sa.Integer(), nullable=False),
    sa.Column('follower', sa.Integer(), nullable=True),
    sa.Column('followed', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['follower'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('follow_id')
    )
    op.create_table('post',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('track_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('post_id')
    )
    op.create_table('like',
    sa.Column('like_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.post_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('like_id')
    )
    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_like_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_like_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.drop_index('ix_property_address')

    op.drop_table('property')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('address', sa.VARCHAR(length=500), nullable=True),
    sa.Column('start_date', sa.DATETIME(), nullable=True),
    sa.Column('duration', sa.INTEGER(), nullable=True),
    sa.Column('rent', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.create_index('ix_property_address', ['address'], unique=1)

    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_like_user_id'))
        batch_op.drop_index(batch_op.f('ix_like_post_id'))

    op.drop_table('like')
    op.drop_table('post')
    op.drop_table('follow')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('track', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_track_spotify_id'))

    op.drop_table('track')
    # ### end Alembic commands ###
